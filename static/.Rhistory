library(edfReader)
library(jsonlite)
install.packages("here")
library(here)
here("construct","a","path")
here("static")
libDir <- here("static")
libDir
install.packages("here")
library(edfReader)
library(jsonlite)
library(here)
here()
libDir <- here("static")
libDir
library(edfReader)
library(jsonlite)
library(here)
libDir <- here("static")
#Input from r-script
list <- input[[1]]
libDir
libDir <- here("static")
#load EDF
MEPtest <- paste(libDir, "MEPtest2.edf", sep='')
CHdr <- readEdfHeader(MEPtest)
libDir <- here("static")
#load EDF
MEPtest <- paste(libDir, "/MEPtest2.edf", sep='')
CHdr <- readEdfHeader(MEPtest)
#read singals
TSignals <-readEdfSignals(CHdr, simplify=FALSE ,fragments = TRUE)
TSignals
#convert output to json
toJSON(TSignals, force = TRUE)
script.dir <- dirname(sys.frame(1)$ofile)
script.dir <- dirname(sys.frame(0)$ofile)
script.dir <- dirname(sys.frame()$ofile)
script.dir <- dirname(sys.frame(1)$ofile)
here("static")
libDir <- "C:/Users/stmo/iom_manager/static"
install.packages("readr")
library(readr)
m <- read_delim("Documents/2015 Medizininformatik/9 Bachelorthesis/CSV_Export_20191211T150107 Kopie/Median L.csv",
";", escape_double = FALSE, trim_ws = TRUE)
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
TSignalAll$Timestamp <- factor(TSignalAll$Timestamp)
TSignalAll$Channel <- factor(TSignalAll$Channel)
#Tabelle von Wide to Long Form
library(tidyr)
data_long <- gather(TSignalAll, signal, value, '1/2400':'2400/2400', factor_key = TRUE)
Signals = subset(data_long, select = -c(3))
str(Signals)
##fÃ¼r Moritz
#####Datensatz fÃ¼r einen Zeitstempel mit allen KanÃ¤len
t <- Signals[Signals$Timestamp=='20181106T135754,764',]
plot(t$value, type = "s", col="darkblue", xlab="Latency [ms]", ylab="Amplitude [mV]", main="SEP Median L")
install.packages(c("readr", "tidyr"))
m <- read_delim("Documents/2015 Medizininformatik/9 Bachelorthesis/CSV_Export_20191211T150107 Kopie/Median L.csv",
";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
install.packages("readr")
install.packages("readr")
m <- read_delim("Documents/2015 Medizininformatik/9 Bachelorthesis/CSV_Export_20191211T150107 Kopie/Median L.csv",
";", escape_double = FALSE, trim_ws = TRUE)
MyData <- read.csv(file="C:/Users/stmo/iom_manager/static/Median L.csv", header=TRUE, sep=",")
m <- read.csv(file="C:/Users/stmo/iom_manager/static/Median L.csv", header=TRUE, sep=",")
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
TSignalAll$Timestamp <- factor(TSignalAll$Timestamp)
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
m <- read_delim("Documents/2015 Medizininformatik/9 Bachelorthesis/CSV_Export_20191211T150107 Kopie/Median L.csv",
";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
install.packages(readr)
install.packages('readr')
library(readr)
m <- read_delim("Documents/2015 Medizininformatik/9 Bachelorthesis/CSV_Export_20191211T150107 Kopie/Median L.csv",
";", escape_double = FALSE, trim_ws = TRUE)
m <- read.csv(file="C:/Users/stmo/iom_manager/static/Median L.csv", header=TRUE, sep=",")
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
library(readr)
m <- read_delim("Documents/2015 Medizininformatik/9 Bachelorthesis/CSV_Export_20191211T150107 Kopie/Median L.csv",
";", escape_double = FALSE, trim_ws = TRUE)
m <- read_delim("C:/Users/stmo/iom_manager/static/Median L.csv",
";", escape_double = FALSE, trim_ws = TRUE)
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
TSignalAll$Timestamp <- factor(TSignalAll$Timestamp)
TSignalAll$Channel <- factor(TSignalAll$Channel)
#Tabelle von Wide to Long Form
library(tidyr)
install.packages("tidyr")
#Tabelle von Wide to Long Form
library(tidyr)
data_long <- gather(TSignalAll, signal, value, '1/2400':'2400/2400', factor_key = TRUE)
Signals = subset(data_long, select = -c(3))
str(Signals)
##fÃ¼r Moritz
#####Datensatz fÃ¼r einen Zeitstempel mit allen KanÃ¤len
t <- Signals[Signals$Timestamp=='20181106T135754,764',]
plot(t$value, type = "s", col="darkblue", xlab="Latency [ms]", ylab="Amplitude [mV]", main="SEP Median L")
toJSON(TSignals, force = TRUE)
library(jsonlite)
toJSON(TSignals, force = TRUE)
toJSON(t, force = TRUE)
#Path needs to be adapted to local iom_manager/static directory
libDir <- "C:/Users/stmo/iom_manager/static"
#load EDF
MEPtest <- paste(libDir, 'Median L.csv', sep='')
MEPtest
#load EDF
MEPtest <- paste(libDir, '/Median L.csv', sep='')
MEPtest
#load EDF
csv <- paste(libDir, '/Median L.csv', sep='')
m <- read_delim(csv,
";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
library(jsonlite)
library(tidyr)
#Path needs to be adapted to local iom_manager/static directory
libDir <- "C:/Users/stmo/iom_manager/static"
#load EDF
csv <- paste(libDir, '/Median L.csv', sep='')
m <- read_delim(csv, ";", escape_double = FALSE, trim_ws = TRUE)
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
TSignalAll$Timestamp <- factor(TSignalAll$Timestamp)
TSignalAll$Channel <- factor(TSignalAll$Channel)
#Tabelle von Wide to Long Form
data_long <- gather(TSignalAll, signal, value, '1/2400':'2400/2400', factor_key = TRUE)
Signals = subset(data_long, select = -c(3))
str(Signals)
##fÃ¼r Moritz
#####Datensatz fÃ¼r einen Zeitstempel mit allen KanÃ¤len
t <- Signals[Signals$Timestamp=='20181106T135754,764',]
toJSON(t, force = TRUE)
options(warn=-1)
#Path needs to be adapted to local iom_manager/static directory
libDir <- "C:/Users/stmo/iom_manager/static"
#load EDF
csv <- paste(libDir, '/Median L.csv', sep='')
m <- read_delim(csv, ";", escape_double = FALSE, trim_ws = TRUE)
{r message=FALSE}
r message=FALSE
m <- read_delim(csv, ";", escape_double = FALSE, trim_ws = TRUE, message=FALSE)
options(readr.num_columns = 0)
m <- read_delim(csv, ";", escape_double = FALSE, trim_ws = TRUE, message=FALSE)
m <- read_delim(csv, ";", escape_double = FALSE, trim_ws = TRUE)
#Path needs to be adapted to local iom_manager/static directory
libDir <- "C:/Users/stmo/iom_manager/static"
#load EDF
MEPtest <- paste(libDir, '/MEPtest2.edf', sep='')
CHdr <- readEdfHeader(MEPtest)
library(edfReader)
library(jsonlite)
#load EDF
MEPtest <- paste(libDir, '/MEPtest2.edf', sep='')
CHdr <- readEdfHeader(MEPtest)
#read singals
TSignals <-readEdfSignals(CHdr, simplify=FALSE ,fragments = TRUE)
TSignals
#convert output to json
toJSON(TSignals, force = TRUE)
library(readr)
library(jsonlite)
library(tidyr)
options(readr.num_columns = 0)
#Path needs to be adapted to local iom_manager/static directory
libDir <- "C:/Users/stmo/iom_manager/static"
#load EDF
csv <- paste(libDir, '/Median L.csv', sep='')
m <- read_delim(csv, ";", escape_double = FALSE, trim_ws = TRUE)
#Nur die Spalten der Kanalbezeichnung, Zeitstempel und der Signaldaten
TSignalAll = subset(m, select = -c(1:2, 4:10, 12:26))
TSignalAll$Timestamp <- factor(TSignalAll$Timestamp)
TSignalAll$Channel <- factor(TSignalAll$Channel)
#Tabelle von Wide to Long Form
data_long <- gather(TSignalAll, signal, value, '1/2400':'2400/2400', factor_key = TRUE)
Signals = subset(data_long, select = -c(3))
str(Signals)
##fÃ¼r Moritz
#####Datensatz fÃ¼r einen Zeitstempel mit allen KanÃ¤len
t <- Signals[Signals$Timestamp=='20181106T135754,764',]
toJSON(t, force = TRUE)
Signals = subset(data_long, select = -c(3))
toJSON(t, force = TRUE)
(TSignals, force = TRUE)
#convert output to json
toJSON(TSignals, force = TRUE)
